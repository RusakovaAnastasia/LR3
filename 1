#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>


using namespace std;

int main()

{

double e = 0.0001; //погрешность

double a = 0.2; //начальное Х

double b = 1; //конечное Х

int k = 10; //количество интервалов по Х

int n = 10; //фиксированное число итераций

int i1, i2, i3; //переменные для циклов

double h = (b - a) / k; //шаг по Х

double x; //текущий Х

double xn; //накапливаемый Х

double sn; //один элемент ряда

double S1; //сумма ряда из n элементов

double S2; //сумма ряда, пока очередной элемент больше погрешности

double f; //точное значение функции

for (i1 = 0; i1 <= k; i1++) //цикл по Х

{

x = a + i1 * h;

f = 0.5 * log(x);

for (S1 = 0, xn = -1, i2 = 1; i2 <= n; i2++) //цикл суммирования ряда из n элементов

{

xn = 2 * i2 + 1;

S1 += (1 / xn) * pow((x - 1) * (x + 1), xn);

}

for (S2 = 0, xn = -1, sn = 1, i3 = 1; fabs(sn) >= e; i3++) //цикл суммирования ряда пока модуль элемента ряда >= e

{

xn = 2 * i3 + 1; //накапливаемое частичное значение элемента ряда

sn = (1 / xn) * pow((x - 1) * (x + 1), xn); //

S2 += sn;

}

//выводим полученные результаты:

printf("f(%#.2g)=%#9.7f, S1(%d)=%#9.7f, S2(%d)=%#9.7f, e1=%3.2e, e2=%3.2e",

x, f, i2 - 1, S1, i3 - 1, S2, fabs(S1 - f), fabs(S2 - f));

cout << endl;

}

return 0;

}
